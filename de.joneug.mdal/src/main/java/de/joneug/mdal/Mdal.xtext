grammar de.joneug.mdal.Mdal with org.eclipse.xtext.common.Terminals

generate mdal "https://www.example.org/mdal"

Model:
	solution=Solution;

Solution:
	'solution' name=STRING '{'
		(
			('Prefix' '=' prefix=STRING ';')? &
			(master=Master) &
			(supplemental+=Supplemental)* &
			(document=Document) &
			(journal=Journal)
		)
	'}'
;

Entity:
	Master | Supplemental | DocumentHeader | DocumentLine | Journal
;

Master:
	'master' name=STRING '{'
		(
			('ShortName' '=' shortName=STRING ';') &
			('fields' '{' fields+=Field* '}')?
		)
	'}';

Supplemental:
	'supplemental' name=STRING '{'
		(
			('ShortName' '=' shortName=STRING ';') &
			('fields' '{' fields+=Field* '}')?
		)
	'}'
;

Document:
	'document' '{'
		(
			(documentHeader=DocumentHeader) &
			(documentLine=DocumentLine)
		)
	'}'
;

DocumentHeader:
	{DocumentHeader} 'header' name=STRING '{'
		(
			('ShortName' '=' shortName=STRING ';') &
			('fields' '{' ((fields+=Field)* & (includeFields+=IncludeField)*) '}')?	
		)
	'}'
;

DocumentLine:
	{DocumentLine} 'line' name=STRING '{'
		(
			('ShortName' '=' shortName=STRING ';') &
			('fields' '{' ((fields+=Field)* & (includeFields+=IncludeField)*) '}')?	
		)
	'}'
;

Journal:
	{Journal} 'journal' name=STRING '{'
		(
			('ShortName' '=' shortName=STRING ';') &
			('fields' '{' ((fields+=Field)* & (includeFields+=IncludeField)*) '}')?	
		)
	'}'
;

Field:
	CustomField | TemplateField;

CustomField:
	'field' '(' name=STRING ';' type=FieldType ')'
	(
		'{'
			(
				('Caption' '=' caption=STRING ';')? &
				('TableRelation' '=' tableRelation=STRING ';')?
			)
		'}'
	)?
;

TemplateField:
	'template' '(' name=STRING ';' type=TemplateType ')'
;

IncludeField:
	'include' '(' entityName=STRING '.' fieldName=STRING ')'// ('{' &
		//('CardGroup' cardGroup = STRING)?
	//'}')?
;

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Template Types
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
TemplateType:
	TemplateName | TemplateDescription | TemplateGenProdPostingGroup | TemplateDimensions | TemplateAddress | TemplateContactInfo;

TemplateName:
	{TemplateName} 'Name';
	
TemplateDescription:
	{TemplateDescription} 'Description';

TemplateGenProdPostingGroup:
	{TemplateGenProdPostingGroup} 'GenProductPostingGroup';

TemplateDimensions:
	{TemplateDimensions} 'Dimensions';

TemplateAddress:
	{TemplateAddress} 'Address';

TemplateContactInfo:
	{TemplateContactInfo} 'ContactInfo';

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Field Types
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
FieldType:
	TypeBoolean | TypeInteger | TypeBigInteger | TypeDecimal | TypeCode | TypeText
	| TypeDate | TypeTime | TypeDateTime | TypeGuid | TypeBlob | TypeEnum | TypeOption
	| TypeMedia | TypeMediaSet | TypeDateFormula | TypeDuration | TypeRecordId | TypeTableFilter;

TypeBoolean:
	{TypeBoolean} 'Boolean';

TypeInteger:
	{TypeInteger} 'Integer';

TypeBigInteger:
	{TypeBigInteger} 'BigInteger';

TypeDecimal:
	{TypeDecimal} 'Decimal';

TypeCode:
	{TypeCode} 'Code' '[' length=INT ']';

TypeText:
	{TypeText} 'Text' '[' length=INT ']';

TypeDate:
	{TypeDate} 'Date';

TypeTime:
	{TypeTime} 'Time';

TypeDateTime:
	{TypeDateTime} 'DateTime';

TypeGuid:
	{TypeGuid} 'Guid';

TypeBlob:
	{TypeBlob} 'Blob';

TypeEnum:
	{TypeEnum} 'Enum' '[' members+=STRING (',' members+=STRING)* ']';

TypeOption:
	{TypeOption} 'Option' '[' members+=STRING* ']';

TypeMedia:
	{TypeMedia} 'Media';

TypeMediaSet:
	{TypeMediaSet} 'MediaSet';

TypeDateFormula:
	{TypeDateFormula} 'DateFormula';

TypeDuration:
	{TypeDuration} 'Duration';

TypeRecordId:
	{TypeRecordId} 'RecordId';

TypeTableFilter:
	{TypeTableFilter} 'TableFilter';

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Boolean enum
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
// Internally used options
enum BoolInternal:
	UNSPECIFIED | TRUE | FALSE;

// Options visible to the user
enum Bool returns BoolInternal:
	TRUE='true' | FALSE='false';
