name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/checkout@v2
      - name: Restore Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build  --info
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Set up Environment Variables (IDE)
        run: |
          echo "ASSET_PATH=$(ls de.joneug.mdal.ide/build/distributions/*.zip | head -1)" >> $GITHUB_ENV
          echo "ASSET_NAME=$(cd de.joneug.mdal.ide/build/distributions/ && ls *.zip | head -1)" >> $GITHUB_ENV
      - name: Upload Release Asset (IDE)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: de.joneug.mdal.ide.zip
          asset_content_type: application/zip
      - name: Set up Environment Variables (CLI)
        run: |
          echo "::set-env name=ASSET_PATH::$(ls de.joneug.mdal.standalone/build/distributions/*.zip | head -1)"
          echo "::set-env name=ASSET_NAME::$(cd de.joneug.mdal.standalone/build/distributions/ && ls *.zip | head -1)"
      - name: Upload Release Asset (CLI)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: de.joneug.mdal.standalone.zip
          asset_content_type: application/zip
  package:
    env:
      IMAGE_NAME: mdal/cli
      IMAGE_TAG: latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/checkout@v2
      - name: Create Dist
        run: ./gradlew distUnzip --info
      - name: Set up Environment Variables
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: Publish to Docker Hub
        if: runner.os != 'windows'
        run: |
          cd de.joneug.mdal.standalone
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u joneug --password-stdin
          docker build -t $IMAGE_NAME:$VERSION-linux .
          docker push $IMAGE_NAME
      - name: Publish to Docker Hub
        if: runner.os == 'windows'
        run: |
          cd de.joneug.mdal.standalone
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u joneug --password-stdin
          docker build -f Dockerfile.windows -t "${env:IMAGE_NAME}:{$VERSION}-windows" .
          docker push "${env:IMAGE_NAME}"
  manifest:
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - run: |
          curl -Lo manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.2/manifest-tool-linux-amd64
          chmod +x manifest-tool
          ./manifest-tool --username joneug --password "${{ secrets.DOCKER_PASSWORD }}" push from-args \
            --platforms linux/amd64,windows/amd64 \
            --template $IMAGE_NAME:$VERSION-OS \
            --target $IMAGE_NAME:$VERSION
